import{_ as s,a as n,b as e}from"./virtu_arch3-ur_fdjp4.js";import{_ as t,o as i,c as l,a as r}from"./app-8Md2KhH_.js";const o="/learning-2023-devops/assets/bridge-CU8V8moe.png",p="/learning-2023-devops/assets/nat-vryA0WC7.png",c="/learning-2023-devops/assets/hostonly-CmDSC_GE.png",d="/learning-2023-devops/assets/vsphere-BAwdP4Q9.png",u={};function v(m,a){return i(),l("div",null,a[0]||(a[0]=[r('<h1 id="virtualization" tabindex="-1"><a class="header-anchor" href="#virtualization"><span>Virtualization</span></a></h1><p>This section covers essential concepts and tools related to virtualization, exploring different types of hypervisors, networking setups, scripting for virtual environment management, and tools like Vagrant for streamlined development environments.</p><h2 id="definition" tabindex="-1"><a class="header-anchor" href="#definition"><span>Definition</span></a></h2><p>Virtualization refers to the creation of virtual (rather than physical) versions of computing resources, including operating systems, servers, storage devices, and networks. It enables the efficient utilization of hardware by allowing multiple virtual instances to run on a single physical machine.</p><h2 id="history" tabindex="-1"><a class="header-anchor" href="#history"><span>History</span></a></h2><h4 id="in-the-dark-ages-one-application-on-one-physical-server" tabindex="-1"><a class="header-anchor" href="#in-the-dark-ages-one-application-on-one-physical-server"><span>In the Dark ages : One application on One physical server</span></a></h4><p><img src="'+s+'" alt="virtu1"></p><ul><li>Slow deployment times</li><li>Huge costs</li><li>Wasted resources</li><li>Difficult to scale</li><li>Difficult to migrate</li><li>Vendor lock in</li></ul><h4 id="then-virtualization-one-server-multiple-apps-in-vms" tabindex="-1"><a class="header-anchor" href="#then-virtualization-one-server-multiple-apps-in-vms"><span>Then, virtualization : One server, multiple apps in VMs</span></a></h4><p><img src="'+n+'" alt="virtu2"></p><ul><li>Better resource pooling : One physical machine divided into multiple virtual machines</li><li>Easier to scale</li><li>VMs in the cloud <ul><li>Rapid elasticity</li><li>Pay as you go model</li></ul></li></ul><p><img src="'+e+'" alt="virtu3"></p><h4 id="but-vms" tabindex="-1"><a class="header-anchor" href="#but-vms"><span>But VMs</span></a></h4><ul><li><p>Each VMs stills requires</p><ul><li>CPU allocation</li><li>Storage</li><li>RAM</li><li>An entire guest operating system</li></ul></li><li><p>The more VMs you run, the more resources you need</p></li><li><p>Guest OS means wasted resources</p></li><li><p>Application portability not guaranteed</p></li></ul><h2 id="what-is-an-hypervisor" tabindex="-1"><a class="header-anchor" href="#what-is-an-hypervisor"><span>What is an hypervisor ?</span></a></h2><ul><li>A <strong>hypervisor</strong> or <strong>virtual machine monitor (VMM)</strong> is a piece of computer software, firmware or hardware that creates and runs virtual machines.</li><li>A computer on which a hypervisor is running one or more virtual machines is defined as a <strong>host machine</strong>.</li><li>Each virtual machine is called a <strong>guest machine</strong></li></ul><p>2 types :</p><ul><li><p><strong>Type 1</strong> hypervisor is installed directly on bare-metal hardware, it doesn&#39;t require an additional OS, it is the OS, even it it is a light or minimal OS.</p></li><li><p><strong>Type 2</strong> is more of an application installed on an operating system and not directly on the bare-metal. Ex: VirtualBox and Vmware Workstation</p><ul><li>Advantages: Run on a greater array of HW because the underlying Host OS is controlling HW access, Easy user interface, Data can be secured on the desktop.</li><li>Disadvantages: Decreased security, Loss of Centralized Management, Lower VM Density, Cannot support as many VMs are the first type.</li></ul></li></ul><h2 id="hypervisor-type-ii" tabindex="-1"><a class="header-anchor" href="#hypervisor-type-ii"><span>Hypervisor Type II</span></a></h2><p>Hypervisor Type II, also known as a hosted hypervisor, runs on top of an existing operating system. It allows users to create and manage virtual machines (VMs) without modifying the host system. Popular examples include VirtualBox and VMware Workstation.</p><h3 id="networks" tabindex="-1"><a class="header-anchor" href="#networks"><span>Networks</span></a></h3><p>In virtualization, networks can be configured to facilitate communication between virtual machines, allowing them to share data and resources. Network configurations within virtual environments play a crucial role in creating isolated or interconnected setups, influencing communication and security between VMs.</p><h4 id="bridge" tabindex="-1"><a class="header-anchor" href="#bridge"><span>Bridge</span></a></h4><p>A bridge is created between the virtual network card of the virtualization application and the network card of your physical host.</p><p>The operating system of your physical host shares its physical card with the operating system of your virtual machine(s).</p><p>You must select only one network card from the host machine per point. To communicate, it will require a TCP/IP configuration identical to the other devices on the network</p><p><img src="'+o+'" alt="bridge"></p><h4 id="nat" tabindex="-1"><a class="header-anchor" href="#nat"><span>NAT</span></a></h4><p>Principle of a NAT gateway: masking the IP address of the clients connected to it to exit onto the network. Transparent access to the local network: the host&#39;s IP address is used thanks to the address translation of the NAT process. IP distributed by the virtualization application via a DHCP server Interesting when security is applied to a port access in a room where only one MAC address is allowed.</p><p><img src="'+p+'" alt="nat"></p><h4 id="hostonly" tabindex="-1"><a class="header-anchor" href="#hostonly"><span>HostOnly</span></a></h4><p>As the name suggests, this mode allows only the establishment of a connection between the virtual machine and the physical machine.</p><p><img src="'+c+`" alt="bridge"></p><h3 id="scripting-vms" tabindex="-1"><a class="header-anchor" href="#scripting-vms"><span>Scripting VMs</span></a></h3><p><code>VBoxManage</code> is a command-line interface tool provided by VirtualBox, facilitating the management of VMs and their configurations. It allows for automation and scripting of various VirtualBox operations, enabling tasks like creating VMs, modifying settings, starting or stopping VMs, and more through scripting.</p><h4 id="vm-management" tabindex="-1"><a class="header-anchor" href="#vm-management"><span>VM Management</span></a></h4><ul><li><strong>CreateVM:</strong> Create a new virtual machine.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage createvm <span class="token parameter variable">--name</span> <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> <span class="token parameter variable">--ostype</span> <span class="token operator">&lt;</span>ostype<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>StartVM:</strong> Start a virtual machine.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage startvm <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>ControlVM:</strong> Control the state of a virtual machine (pause, resume, reset, poweroff).<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage controlvm <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> pause<span class="token operator">|</span>resume<span class="token operator">|</span>reset<span class="token operator">|</span>poweroff</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>CloneVM:</strong> Clone a VM to create an identical copy.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage clonevm <span class="token operator">&lt;</span>sourcevm<span class="token operator">&gt;</span> <span class="token parameter variable">--name</span> <span class="token operator">&lt;</span>newvmname<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="snapshot-management" tabindex="-1"><a class="header-anchor" href="#snapshot-management"><span>Snapshot Management</span></a></h4><ul><li><strong>Snapshot:</strong> Take, restore, and manage snapshots of a VM.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage snapshot <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> take <span class="token operator">&lt;</span>snapshotname<span class="token operator">&gt;</span></span>
<span class="line">VBoxManage snapshot <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> restore <span class="token operator">&lt;</span>snapshotname<span class="token operator">&gt;</span></span>
<span class="line">VBoxManage snapshot <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> delete <span class="token operator">&lt;</span>snapshotname<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="storage" tabindex="-1"><a class="header-anchor" href="#storage"><span>Storage</span></a></h4><ul><li><strong>Storageattach:</strong> Attach storage devices to VMs.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage storageattach <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> <span class="token parameter variable">--storagectl</span> <span class="token operator">&lt;</span>controller<span class="token operator">&gt;</span> <span class="token parameter variable">--port</span> <span class="token operator">&lt;</span>port<span class="token operator">&gt;</span> <span class="token parameter variable">--device</span> <span class="token operator">&lt;</span>device<span class="token operator">&gt;</span> <span class="token parameter variable">--type</span> <span class="token operator">&lt;</span>type<span class="token operator">&gt;</span> <span class="token parameter variable">--medium</span> <span class="token operator">&lt;</span>medium<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>Closemedium:</strong> Close a medium (disk image) file.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage closemedium disk <span class="token operator">&lt;</span>filename<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="networking" tabindex="-1"><a class="header-anchor" href="#networking"><span>Networking</span></a></h4><ul><li><strong>Modifyvm:</strong> Configure networking options for a VM.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage modifyvm <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> --nic<span class="token operator">&lt;</span><span class="token number">1</span>-N<span class="token operator">&gt;</span> bridged<span class="token operator">|</span>nat<span class="token operator">|</span>intnet<span class="token operator">|</span>hostonly</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="information" tabindex="-1"><a class="header-anchor" href="#information"><span>Information</span></a></h4><ul><li><strong>List vms:</strong> List available virtual machines.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage list vms</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>Showvminfo:</strong> Display detailed information about a VM.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage showvminfo <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="miscellaneous" tabindex="-1"><a class="header-anchor" href="#miscellaneous"><span>Miscellaneous</span></a></h4><ul><li><strong>Guestcontrol:</strong> Run commands inside the guest operating system.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage guestcontrol execute <span class="token operator">&lt;</span>vmname<span class="token operator">&gt;</span> <span class="token parameter variable">--username</span> <span class="token operator">&lt;</span>username<span class="token operator">&gt;</span> <span class="token parameter variable">--password</span> <span class="token operator">&lt;</span>password<span class="token operator">&gt;</span> -- <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>Hostinfo:</strong> Display information about the host system.<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">VBoxManage hostinfo</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>You can read the full documentation <a href="https://www.virtualbox.org/manual/ch08.html" target="_blank" rel="noopener noreferrer">here</a></p><h3 id="vagrant" tabindex="-1"><a class="header-anchor" href="#vagrant"><span>Vagrant</span></a></h3><p>Vagrant is a tool for creating and managing development environments. It simplifies the setup and provisioning of virtual environments by providing a declarative configuration file (Vagrantfile) that defines the VM&#39;s configuration. It&#39;s commonly used in DevOps for consistent development environments across teams.</p><p><strong>Vagrant</strong> is an open-source tool that revolutionizes the way developers create, manage, and share development environments. It automates the setup process by providing a consistent workflow across various operating systems. Using simple configuration files (typically in the form of Vagrantfiles), developers can define the infrastructure and dependencies required for their projects. With Vagrant, spinning up a virtual machine or a containerized environment becomes effortless, ensuring that every team member works in an identical environment, eliminating the infamous &quot;it works on my machine&quot; dilemma. Its seamless integration with popular virtualization providers like VirtualBox, VMware, and container platforms such as Docker and Kubernetes, makes Vagrant a go-to solution for swiftly creating development environments. Developers can launch, provision, and manage these environments with just a few commands, enabling rapid iteration, testing, and debugging. Vagrant streamlines collaboration among teams by allowing them to easily share these preconfigured environments, facilitating smoother onboarding for new team members and ensuring consistent development experiences across the board.</p><h4 id="what-is-a-box" tabindex="-1"><a class="header-anchor" href="#what-is-a-box"><span>What is a box ?</span></a></h4><p>Normally a bare set of software. An example Linux box may contain the following:</p><ul><li>Pre-installed OS</li><li>SSH user so Vagrant can connect</li><li>A provisioner (Chef, Puppet, etc) but not strictly required.</li></ul><p>Each provider may require additional software. E.g. if you&#39;re making a box for VirtualBox, you&#39;ll want to include the VirtualBox guest additions so that shared folders work properly.Software is than provisioned on top of it. Although it does not have to work this way, you could pre install as much as you want</p><h4 id="what-is-a-vagrantfile" tabindex="-1"><a class="header-anchor" href="#what-is-a-vagrantfile"><span>What is a Vagrantfile ?</span></a></h4><p>Ruby based, you can use ruby syntax to assign variables and add some logic if you need it.</p><p>Vagrant reads a Vagrantfile and builds a machine based on a template called a box.</p><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line">Vagrant<span class="token punctuation">.</span>configure<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;2&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>config<span class="token operator">|</span></span>
<span class="line">  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>box <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;ubuntu/focal64&quot;</span></span></span>
<span class="line">  </span>
<span class="line">  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>network <span class="token string-literal"><span class="token string">&quot;private_network&quot;</span></span><span class="token punctuation">,</span> <span class="token symbol">type</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">&quot;dhcp&quot;</span></span></span>
<span class="line"></span>
<span class="line">  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>provider <span class="token string-literal"><span class="token string">&quot;virtualbox&quot;</span></span> <span class="token keyword">do</span> <span class="token operator">|</span>vb<span class="token operator">|</span></span>
<span class="line">    vb<span class="token punctuation">.</span>memory <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;1024&quot;</span></span></span>
<span class="line">    vb<span class="token punctuation">.</span>cpus <span class="token operator">=</span> <span class="token number">2</span></span>
<span class="line">  <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Explanation</strong></p><ul><li><code>Vagrant.configure(&quot;2&quot;) do |config|</code> sets up the Vagrant configuration.</li><li><code>config.vm.box = &quot;ubuntu/focal64&quot;</code> specifies the base box to use. In this case, it uses the Ubuntu Focal Fossa (20.04 LTS) 64-bit box from Vagrant Cloud.</li><li><code>config.vm.network &quot;private_network&quot;, type: &quot;dhcp&quot;</code> sets up a private network with DHCP to enable networking for the VM.</li><li><code>config.vm.provider &quot;virtualbox&quot; do |vb|</code> configures settings specific to the VirtualBox provider.</li><li><code>vb.memory = &quot;1024&quot;</code> sets the amount of RAM for the VM to 1024 MB (1GB).</li><li><code>vb.cpus = 2</code> assigns 2 virtual CPUs to the VM.</li></ul><h4 id="initialize-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#initialize-a-vagrant-environment"><span><strong>Initialize a Vagrant Environment</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">vagrant init</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Initializes a new Vagrant environment in the current directory, creating a Vagrantfile.</p><h4 id="start-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#start-a-vagrant-environment"><span><strong>Start a Vagrant Environment</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">vagrant up</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Starts the Vagrant environment based on the configuration defined in the Vagrantfile.</p><h4 id="stop-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#stop-a-vagrant-environment"><span><strong>Stop a Vagrant Environment</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">vagrant <span class="token function">halt</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Stops the running Vagrant environment.</p><h4 id="ssh-into-a-running-vagrant-machine" tabindex="-1"><a class="header-anchor" href="#ssh-into-a-running-vagrant-machine"><span><strong>SSH into a Running Vagrant Machine</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">vagrant <span class="token function">ssh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Connects to the default SSH session of the running Vagrant machine.</p><h4 id="suspend-and-resume-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#suspend-and-resume-a-vagrant-environment"><span><strong>Suspend and Resume a Vagrant Environment</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">vagrant <span class="token function">suspend</span></span>
<span class="line">vagrant resume</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Suspends and resumes a running Vagrant environment to conserve resources.</p><h4 id="box-management" tabindex="-1"><a class="header-anchor" href="#box-management"><span><strong>Box Management</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">vagrant box <span class="token function">add</span> <span class="token operator">&lt;</span>box_name<span class="token operator">&gt;</span></span>
<span class="line">vagrant box list</span>
<span class="line">vagrant box remove <span class="token operator">&lt;</span>box_name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Manages Vagrant boxes, including adding, listing, and removing them.</p><h4 id="reload-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#reload-vagrant-environment"><span><strong>Reload Vagrant Environment</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">vagrant reload</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Reloads the Vagrant environment, applying any changes made to the Vagrantfile.</p><h4 id="provision-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#provision-a-vagrant-environment"><span><strong>Provision a Vagrant Environment</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">vagrant provision</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Runs provisioning scripts defined in the Vagrantfile on an already running environment.</p><h4 id="destroy-a-vagrant-environment" tabindex="-1"><a class="header-anchor" href="#destroy-a-vagrant-environment"><span><strong>Destroy a Vagrant Environment</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">vagrant destroy</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Stops and deletes all traces of the Vagrant environment, including the VM and associated resources.</p><h4 id="ssh-configuration-and-info" tabindex="-1"><a class="header-anchor" href="#ssh-configuration-and-info"><span><strong>SSH Configuration and Info</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">   vagrant ssh-config</span>
<span class="line">   vagrant port</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Displays SSH configuration details and port mappings for the Vagrant environment.</p><p>You can find more command informations <a href="http://docs.vagrantup.com/v2/cli/index.html" target="_blank" rel="noopener noreferrer">here</a></p><h2 id="hypervisor-type-i" tabindex="-1"><a class="header-anchor" href="#hypervisor-type-i"><span>Hypervisor Type I</span></a></h2><p>Hypervisor Type I, also known as a bare-metal hypervisor, runs directly on the physical hardware without the need for a host operating system. It provides better performance and efficiency by eliminating the overhead of an additional operating system layer. Examples include VMware ESXi and Microsoft Hyper-V.</p><h4 id="what-is-vmware-esxi" tabindex="-1"><a class="header-anchor" href="#what-is-vmware-esxi"><span>What is VMware ESXi?</span></a></h4><p>VMware ESXi is a powerful, bare-metal hypervisor, designed to create and manage virtual machines (VMs) on physical servers. It offers a range of functionalities essential for virtualization and efficient resource management in a data center environment.</p><p><img src="`+d+`" alt="vsphere"></p><p>Key Functionalities:</p><p><strong>1. Virtual Machine Management</strong></p><p>Creation and Configuration: ESXi enables the creation of multiple VMs on a single physical server, allowing different operating systems to run concurrently. Resource Allocation: It facilitates the allocation of CPU, memory, storage, and network resources to each VM, ensuring optimal performance. Snapshots: Users can take snapshots of VMs to capture their current state, facilitating easy backup and rollback.</p><p><strong>2. Resource Pooling and Allocation</strong></p><p>Resource Pools: ESXi allows the creation of resource pools to logically group and manage compute resources, ensuring efficient allocation to VMs based on priorities and requirements. Dynamic Resource Allocation: Through features like Distributed Resource Scheduler (DRS), it dynamically balances resource usage across multiple hosts for optimal performance.</p><p><strong>3. Networking</strong></p><p>Virtual Networking: ESXi offers virtual networking capabilities, allowing users to create and manage virtual switches, VLANs, and network adapters for VMs. Network Isolation: It supports network segmentation to isolate VM traffic for security and performance reasons.</p><p><strong>4. Storage Management</strong></p><p>Datastore Management: ESXi manages datastores, which are storage repositories for VM files, enabling efficient storage provisioning and management. Storage vMotion: This feature allows live migration of VMs between datastores without downtime, ensuring flexibility and load balancing.</p><p><strong>5. High Availability and Fault Tolerance</strong></p><p>High Availability (HA): ESXi&#39;s HA feature ensures VMs remain available in the event of hardware failures by automatically restarting them on alternate hosts. Fault Tolerance (FT): For critical applications, FT maintains a secondary VM that mirrors the primary VM&#39;s operations, providing continuous availability without interruption.</p><p><strong>6. Security and Compliance</strong></p><p>Secure Boot: ESXi supports Secure Boot to ensure that only cryptographically signed components are loaded during boot-up, enhancing system security. Role-Based Access Control (RBAC): Administrators can enforce access controls and assign specific privileges to users or groups, enhancing security and compliance.</p><p><strong>7. Monitoring and Performance Optimization</strong></p><p>Performance Monitoring: ESXi provides tools for monitoring VM performance metrics, enabling administrators to identify bottlenecks and optimize resource usage. vCenter Server Integration: Integration with vCenter Server enhances monitoring capabilities and provides a centralized management platform for multiple ESXi hosts.</p><p><strong>8. Backup and Recovery</strong></p><p>VMware Data Protection (VDP): It offers built-in backup and recovery solutions for VMs, allowing easy restoration in case of data loss or corruption. Conclusion: VMware ESXi serves as a robust virtualization platform, offering a wide array of functionalities essential for modern data center management. Its features encompass VM management, resource optimization, networking, storage, high availability, security, and performance monitoring, making it a fundamental tool for DevOps professionals managing infrastructure at scale.</p><h2 id="exercises" tabindex="-1"><a class="header-anchor" href="#exercises"><span>Exercises</span></a></h2><h3 id="🧪-exercise-1-use-an-hypervisor-type-2" tabindex="-1"><a class="header-anchor" href="#🧪-exercise-1-use-an-hypervisor-type-2"><span>🧪 Exercise 1 - Use an hypervisor type 2</span></a></h3><p>Install Ubuntu on VirtualBox hypervisor.</p><ul><li><a href="https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox#1-overview" target="_blank" rel="noopener noreferrer">https://ubuntu.com/tutorials/how-to-run-ubuntu-desktop-on-a-virtual-machine-using-virtualbox#1-overview</a></li></ul><div class="hint-container tip"><p class="hint-container-title">For MacOS users</p><p>please use instead of VirtualBox , <a href="https://github.com/utmapp/UTM" target="_blank" rel="noopener noreferrer">UTM hypervisor (macOS version)</a></p></div><h3 id="🧪-exercise-2-virtualization-scripting" tabindex="-1"><a class="header-anchor" href="#🧪-exercise-2-virtualization-scripting"><span>🧪 Exercise 2 - Virtualization scripting</span></a></h3><p>Generate a linux virtual machine with VBoxManage</p><ul><li>Create your bash script</li><li>Download alpine iso : <a href="http://dl-cdn.alpinelinux.org/alpine/v3.4/releases/x86_64/alpine-3.4.3-x86_64.iso" target="_blank" rel="noopener noreferrer">http://dl-cdn.alpinelinux.org/alpine/v3.4/releases/x86_64/alpine-3.4.3-x86_64.iso</a></li><li>Create storage medium for VM</li><li>List available OS types and choose the right one</li><li>Register a new alpine VM</li><li>Configure system settings of alpine VM</li><li>Configure boot settings of VM (Boot1 CDDrive , Boot2: Disk)</li><li>Add a storage controller (IDE) for the DVD iso</li><li>Add a storage controller (SATA) for the HDD</li><li>Add the storage created at the begining to the VM</li><li>Add Alpine ISO to the VM</li></ul><div class="hint-container warning"><p class="hint-container-title">To rework, don&#39;t do it</p><ul><li>Configure for installing Alpine on the storage (VBoxManage unattended)</li><li>Install Virtualbox Additions</li><li>Use setup-alpine to configure your VM</li><li>install ssh</li><li>install an Apache server</li><li>Test to reach your website from your Host machine</li></ul></div><div class="hint-container tip"><p class="hint-container-title">For MacOS users</p><p>please use instead of VBoxManage , <a href="https://docs.getutm.app/scripting/scripting/" target="_blank" rel="noopener noreferrer"><code>utmctl</code></a></p></div><details class="hint-container details"><summary>solution</summary><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token builtin class-name">echo</span>  <span class="token string">&quot;Create all Variables&quot;</span> </span>
<span class="line"><span class="token comment">#VM_NAME=&quot;UbuntuDesktopVM&quot;</span></span>
<span class="line"><span class="token assign-left variable">VM_NAME</span><span class="token operator">=</span><span class="token string">&quot;DebianDesktopVM&quot;</span></span>
<span class="line"><span class="token comment">#ISO_URL=&quot;https://cdimage.ubuntu.com/releases/focal/release/ubuntu-20.04.5-live-server-arm64.iso&quot;</span></span>
<span class="line"><span class="token assign-left variable">ISO_URL</span><span class="token operator">=</span>https://cdimage.debian.org/cdimage/release/current/arm64/iso-dvd/debian-12.8.0-arm64-DVD-1.iso</span>
<span class="line"><span class="token assign-left variable">ISO_PATH</span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$HOME</span>/Downloads/debian-12.8.0-arm64-DVD-1.iso&quot;</span></span>
<span class="line"><span class="token comment">#ISO_PATH=&quot;$HOME/Downloads/ubuntu-20.04.5-live-server-arm64.iso&quot;</span></span>
<span class="line"><span class="token assign-left variable">VM_DIR</span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$HOME</span>/VirtualBox VMs/<span class="token variable">$VM_NAME</span>&quot;</span></span>
<span class="line"><span class="token assign-left variable">USERNAME</span><span class="token operator">=</span><span class="token string">&quot;ubuntu&quot;</span></span>
<span class="line"><span class="token assign-left variable">PASSWORD</span><span class="token operator">=</span><span class="token string">&quot;ubuntu&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Hardware configuration variables</span></span>
<span class="line"><span class="token assign-left variable">RAM_SIZE</span><span class="token operator">=</span><span class="token number">4096</span> <span class="token comment"># in MB</span></span>
<span class="line"><span class="token assign-left variable">CPU_COUNT</span><span class="token operator">=</span><span class="token number">2</span></span>
<span class="line"><span class="token assign-left variable">VRAM_SIZE</span><span class="token operator">=</span><span class="token number">16</span> <span class="token comment"># in MB</span></span>
<span class="line"><span class="token assign-left variable">DISK_SIZE</span><span class="token operator">=</span><span class="token number">71680</span> <span class="token comment"># in MB</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span>  <span class="token string">&quot;Télécharger l&#39;ISO d&#39;Ubuntu si nécessaire&quot;</span> </span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-f</span> <span class="token string">&quot;<span class="token variable">$ISO_PATH</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Téléchargement de l&#39;ISO d&#39;Ubuntu ARM...&quot;</span></span>
<span class="line">    <span class="token function">curl</span> <span class="token parameter variable">-o</span> <span class="token string">&quot;<span class="token variable">$ISO_PATH</span>&quot;</span> <span class="token parameter variable">-L</span> <span class="token string">&quot;<span class="token variable">$ISO_URL</span>&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-f</span> <span class="token string">&quot;<span class="token variable">$ISO_PATH</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;ISO file not found. Please check the download.&quot;</span></span>
<span class="line">    <span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span>  <span class="token string">&quot;Créer la VM&quot;</span> </span>
<span class="line"><span class="token comment">#VBoxManage createvm --name &quot;$VM_NAME&quot; --ostype &quot;Ubuntu_arm64&quot; --register</span></span>
<span class="line">VBoxManage createvm <span class="token parameter variable">--name</span> <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--ostype</span> <span class="token string">&quot;Debian_arm64&quot;</span> <span class="token parameter variable">--register</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span>  <span class="token string">&quot;Configurer la VM&quot;</span></span>
<span class="line">VBoxManage modifyvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--memory</span> <span class="token variable">$RAM_SIZE</span> <span class="token parameter variable">--cpus</span> <span class="token variable">$CPU_COUNT</span> <span class="token parameter variable">--nic1</span> nat</span>
<span class="line"></span>
<span class="line"><span class="token comment">#VBoxManage modifyvm &quot;VM_NAME&quot; --nic1 bridged --nictype1 virtio</span></span>
<span class="line"></span>
<span class="line">VBoxManage modifyvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--boot1</span> dvd <span class="token parameter variable">--boot2</span> disk <span class="token parameter variable">--boot3</span> none <span class="token parameter variable">--boot4</span> none</span>
<span class="line">VBoxManage modifyvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--graphicscontroller</span> vmsvga <span class="token parameter variable">--vram</span> <span class="token variable">$VRAM_SIZE</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span>  <span class="token string">&quot;Create VM directory if it doesn&#39;t exist&quot;</span></span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;<span class="token variable">$VM_DIR</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span>  <span class="token string">&quot;Créer un disque virtuel&quot;</span> </span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token string">&quot;<span class="token variable">$VM_DIR</span>/<span class="token variable">$VM_NAME</span>.vdi&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;VDI already exists. Removing the existing VDI.&quot;</span></span>
<span class="line">    <span class="token function">rm</span> <span class="token string">&quot;<span class="token variable">$VM_DIR</span>/<span class="token variable">$VM_NAME</span>.vdi&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line">VBoxManage createmedium <span class="token parameter variable">--filename</span> <span class="token string">&quot;<span class="token variable">$VM_DIR</span>/<span class="token variable">$VM_NAME</span>.vdi&quot;</span> <span class="token parameter variable">--size</span> <span class="token variable">$DISK_SIZE</span> <span class="token parameter variable">--format</span> VDI</span>
<span class="line"></span>
<span class="line"><span class="token comment">#echo  Attacher le disque virtuel à la VM </span></span>
<span class="line"><span class="token comment">#VBoxManage storagectl &quot;$VM_NAME&quot; --name &quot;Virt-sata&quot; --add virtio --controller VirtIO </span></span>
<span class="line"></span>
<span class="line"><span class="token comment">#VBoxManage storageattach &quot;$VM_NAME&quot; --storagectl &quot;Virt-sata&quot; --port 0 --device 0 --type hdd --medium &quot;$VM_DIR/$VM_NAME.vdi&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">#echo Attach the  Linux installation ISO using VirtIO SCSI</span></span>
<span class="line"><span class="token comment">#VBoxManage storageattach &quot;$VM_NAME&quot; --storagectl &quot;Virt-sata&quot; --port 0 --device 1 --type dvddrive --medium &quot;$ISO_PATH&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create SATA controller</span></span>
<span class="line"> VBoxManage storagectl <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--name</span> <span class="token string">&quot;SATA Controller&quot;</span> <span class="token parameter variable">--add</span> sata</span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span>  Attacher le disque virtuel à la VM </span>
<span class="line">VBoxManage storagectl <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--name</span> <span class="token string">&quot;Virt-sata&quot;</span> <span class="token parameter variable">--add</span> virtio <span class="token parameter variable">--controller</span> VirtIO </span>
<span class="line"></span>
<span class="line"><span class="token comment"># Attach HDD</span></span>
<span class="line">VBoxManage storageattach <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--storagectl</span> <span class="token string">&quot;SATA Controller&quot;</span> <span class="token parameter variable">--port</span> <span class="token number">0</span> <span class="token parameter variable">--device</span> <span class="token number">0</span> <span class="token parameter variable">--type</span> hdd <span class="token parameter variable">--medium</span> <span class="token string">&quot;<span class="token variable">$VM_DIR</span>/<span class="token variable">$VM_NAME</span>.vdi&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> Attach the  Linux installation ISO using VirtIO SCSI</span>
<span class="line">VBoxManage storageattach <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--storagectl</span> <span class="token string">&quot;Virt-sata&quot;</span> <span class="token parameter variable">--port</span> <span class="token number">1</span> <span class="token parameter variable">--device</span> <span class="token number">1</span> <span class="token parameter variable">--type</span> dvddrive <span class="token parameter variable">--medium</span> <span class="token string">&quot;<span class="token variable">$ISO_PATH</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Enable UEFI</span></span>
<span class="line">VBoxManage modifyvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--firmware</span> efi</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Set boot order</span></span>
<span class="line">VBoxManage modifyvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--boot1</span> dvd <span class="token parameter variable">--boot2</span> disk <span class="token parameter variable">--boot3</span> none <span class="token parameter variable">--boot4</span> none</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">VBoxManage createmedium <span class="token parameter variable">--filename</span> <span class="token string">&quot;<span class="token variable">$VM_DIR</span>/<span class="token variable">$VM_NAME</span>.vdi&quot;</span> <span class="token parameter variable">--size</span> <span class="token variable">$DISK_SIZE</span> <span class="token parameter variable">--format</span> VDI</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Enable UEFI</span></span>
<span class="line">VBoxManage modifyvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--firmware</span> efi</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Set boot order</span></span>
<span class="line">VBoxManage modifyvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--boot1</span> dvd <span class="token parameter variable">--boot2</span> disk <span class="token parameter variable">--boot3</span> none <span class="token parameter variable">--boot4</span> none</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;Unattended installation of Ubuntu with SSH&quot;</span></span>
<span class="line">VBoxManage unattended <span class="token function">install</span> <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--user</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$USERNAME</span>&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--password</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$PASSWORD</span>&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    --full-user-name<span class="token operator">=</span><span class="token string">&quot;Ubuntu User&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    --install-additions <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--locale</span><span class="token operator">=</span><span class="token string">&quot;en_US&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--country</span><span class="token operator">=</span><span class="token string">&quot;US&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    --time-zone<span class="token operator">=</span><span class="token string">&quot;UTC&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--hostname</span><span class="token operator">=</span><span class="token string">&quot;ubuntu-vm.local&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--iso</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$ISO_PATH</span>&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    --post-install-command<span class="token operator">=</span><span class="token string">&quot;apt-get update &amp;&amp; apt-get install -y openssh-server&quot;</span></span>
<span class="line"></span>
<span class="line">VBoxManage showvminfo <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--details</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;Démarrer la VM&quot;</span></span>
<span class="line">VBoxManage startvm <span class="token string">&quot;<span class="token variable">$VM_NAME</span>&quot;</span> <span class="token parameter variable">--type</span> headless</span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;La VM a été créée et l&#39;installation non supervisée d&#39;Ubuntu est en cours.&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="🧪-exercice-3-discover-hypervisor-type-1" tabindex="-1"><a class="header-anchor" href="#🧪-exercice-3-discover-hypervisor-type-1"><span>🧪 Exercice 3 - Discover hypervisor type 1</span></a></h3><ul><li>Install and test an hypervisor type II with VMWare ESXi <a href="https://www.altaro.com/vmware/esxi-free/" target="_blank" rel="noopener noreferrer">Licensing and installation tutorial</a></li></ul><div class="hint-container tip"><p class="hint-container-title">going further</p><ul><li>Create a powershell script to create a simple VM on the ESXi node</li></ul><details class="hint-container details"><summary>solution</summary><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line"><span class="token function">Install-Module</span> <span class="token operator">-</span>Name VMware<span class="token punctuation">.</span>PowerCLI <span class="token operator">-</span>Scope CurrentUser</span>
<span class="line"><span class="token function">Import-Module</span> VMware<span class="token punctuation">.</span>PowerCLI</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-powershell line-numbers-mode" data-highlighter="prismjs" data-ext="powershell" data-title="powershell"><pre><code><span class="line"><span class="token comment"># Connect to your vCenter or ESXi host</span></span>
<span class="line"><span class="token variable">$vcServer</span> = <span class="token string">&quot;your_vc_server_or_esxi_host&quot;</span></span>
<span class="line"><span class="token variable">$vcUser</span> = <span class="token string">&quot;your_username&quot;</span></span>
<span class="line"><span class="token variable">$vcPassword</span> = <span class="token string">&quot;your_password&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">Connect-VIServer</span> <span class="token operator">-</span>Server <span class="token variable">$vcServer</span> <span class="token operator">-</span>User <span class="token variable">$vcUser</span> <span class="token operator">-</span>Password <span class="token variable">$vcPassword</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Define VM parameters</span></span>
<span class="line"><span class="token variable">$vmName</span> = <span class="token string">&quot;AlpineLinuxVM&quot;</span></span>
<span class="line"><span class="token variable">$datacenterName</span> = <span class="token string">&quot;your_datacenter&quot;</span></span>
<span class="line"><span class="token variable">$clusterName</span> = <span class="token string">&quot;your_cluster&quot;</span></span>
<span class="line"><span class="token variable">$datastoreName</span> = <span class="token string">&quot;your_datastore&quot;</span></span>
<span class="line"><span class="token variable">$networkName</span> = <span class="token string">&quot;your_network&quot;</span></span>
<span class="line"><span class="token variable">$vmMemoryMB</span> = 1024</span>
<span class="line"><span class="token variable">$vmNumCPUs</span> = 1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create VM</span></span>
<span class="line"><span class="token function">New-VM</span> <span class="token operator">-</span>Name <span class="token variable">$vmName</span> <span class="token operator">-</span>MemoryMB <span class="token variable">$vmMemoryMB</span> <span class="token operator">-</span>NumCPU <span class="token variable">$vmNumCPUs</span> <span class="token operator">-</span>Datastore <span class="token variable">$datastoreName</span> <span class="token operator">-</span>NetworkName <span class="token variable">$networkName</span> <span class="token operator">-</span>Location <span class="token punctuation">(</span><span class="token function">Get-Cluster</span> <span class="token variable">$clusterName</span> <span class="token punctuation">|</span> <span class="token function">Get-Datacenter</span> <span class="token variable">$datacenterName</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Name</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Start VM</span></span>
<span class="line"><span class="token function">Start-VM</span> <span class="token operator">-</span>VM <span class="token variable">$vmName</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Install VMware Tools (optional)</span></span>
<span class="line"><span class="token comment"># Get-VM -Name $vmName | Install-VMTools -RunAsync</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Disconnect from vCenter or ESXi host</span></span>
<span class="line"><span class="token function">Disconnect-VIServer</span> <span class="token operator">-</span>Server <span class="token variable">$vcServer</span> <span class="token operator">-</span>Confirm:<span class="token boolean">$false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details></div><p>:::</p><h3 id="🧪-exercice-4-vagrant-usage" tabindex="-1"><a class="header-anchor" href="#🧪-exercice-4-vagrant-usage"><span>🧪 Exercice 4 - Vagrant usage</span></a></h3><p>Generate the same AlpineLinux VM HTTPD server with Vagrant</p><ul><li>Go to https://app.vagrantup.com/boxes/search and fin the AlpineLinux box</li><li>And use vagrant command to start it</li></ul><details class="hint-container details"><summary>solution</summary><div class="language-ruby line-numbers-mode" data-highlighter="prismjs" data-ext="rb" data-title="rb"><pre><code><span class="line">Vagrant<span class="token punctuation">.</span>configure<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;2&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token operator">|</span>config<span class="token operator">|</span></span>
<span class="line">  config<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>define <span class="token string-literal"><span class="token string">&quot;alpine_vm&quot;</span></span> <span class="token keyword">do</span> <span class="token operator">|</span>vm<span class="token operator">|</span></span>
<span class="line">    vm<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>box <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;generic/alpine312&quot;</span></span></span>
<span class="line">    vm<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>network <span class="token string-literal"><span class="token string">&quot;private_network&quot;</span></span><span class="token punctuation">,</span> <span class="token symbol">type</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">&quot;dhcp&quot;</span></span></span>
<span class="line">    vm<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>provider <span class="token string-literal"><span class="token string">&quot;virtualbox&quot;</span></span> <span class="token keyword">do</span> <span class="token operator">|</span>vb<span class="token operator">|</span></span>
<span class="line">      vb<span class="token punctuation">.</span>memory <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;1024&quot;</span></span></span>
<span class="line">      vb<span class="token punctuation">.</span>cpus <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">end</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># Provisioning</span></span>
<span class="line">    vm<span class="token punctuation">.</span>vm<span class="token punctuation">.</span>provision <span class="token string-literal"><span class="token string">&quot;shell&quot;</span></span><span class="token punctuation">,</span> <span class="token symbol">inline</span><span class="token operator">:</span> <span class="token string-literal heredoc-string"><span class="token delimiter"><span class="token punctuation">&lt;&lt;-</span><span class="token symbol">SHELL</span></span><span class="token string"></span>
<span class="line">      # Install VirtualBox Guest Additions</span>
<span class="line">      apk add --no-cache virtualbox-guest-additions virtualbox-guest-modules-virt</span>
<span class="line"></span>
<span class="line">      # Install SSH</span>
<span class="line">      apk add --no-cache my_software_to_install</span>
<span class="line">    </span><span class="token delimiter"><span class="token symbol">SHELL</span></span></span></span>
<span class="line">  <span class="token keyword">end</span></span>
<span class="line"><span class="token keyword">end</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,133)]))}const b=t(u,[["render",v],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/virt/","title":"Virtualization","lang":"en-US","frontmatter":{"description":"Virtualization This section covers essential concepts and tools related to virtualization, exploring different types of hypervisors, networking setups, scripting for virtual env...","head":[["meta",{"property":"og:url","content":"https://worldline.github.io/gbrah/learning-2023-devops/learning-2023-devops/virt/"}],["meta",{"property":"og:title","content":"Virtualization"}],["meta",{"property":"og:description","content":"Virtualization This section covers essential concepts and tools related to virtualization, exploring different types of hypervisors, networking setups, scripting for virtual env..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-02T09:49:24.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-02T09:49:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Virtualization\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-02T09:49:24.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Definition","slug":"definition","link":"#definition","children":[]},{"level":2,"title":"History","slug":"history","link":"#history","children":[]},{"level":2,"title":"What is an hypervisor ?","slug":"what-is-an-hypervisor","link":"#what-is-an-hypervisor","children":[]},{"level":2,"title":"Hypervisor Type II","slug":"hypervisor-type-ii","link":"#hypervisor-type-ii","children":[{"level":3,"title":"Networks","slug":"networks","link":"#networks","children":[]},{"level":3,"title":"Scripting VMs","slug":"scripting-vms","link":"#scripting-vms","children":[]},{"level":3,"title":"Vagrant","slug":"vagrant","link":"#vagrant","children":[]}]},{"level":2,"title":"Hypervisor Type I","slug":"hypervisor-type-i","link":"#hypervisor-type-i","children":[]},{"level":2,"title":"Exercises","slug":"exercises","link":"#exercises","children":[{"level":3,"title":"🧪  Exercise 1 - Use an hypervisor type 2","slug":"🧪-exercise-1-use-an-hypervisor-type-2","link":"#🧪-exercise-1-use-an-hypervisor-type-2","children":[]},{"level":3,"title":"🧪  Exercise 2 - Virtualization scripting","slug":"🧪-exercise-2-virtualization-scripting","link":"#🧪-exercise-2-virtualization-scripting","children":[]},{"level":3,"title":"🧪 Exercice 3 - Discover hypervisor type 1","slug":"🧪-exercice-3-discover-hypervisor-type-1","link":"#🧪-exercice-3-discover-hypervisor-type-1","children":[]},{"level":3,"title":"🧪 Exercice 4 - Vagrant usage","slug":"🧪-exercice-4-vagrant-usage","link":"#🧪-exercice-4-vagrant-usage","children":[]}]}],"git":{"updatedTime":1733132964000,"contributors":[{"name":"Brah","email":"brah.gharbi@gmail.com","commits":3,"url":"https://github.com/Brah"},{"name":"Ibrahim Gharbi","email":"brah.gharbi@gmail.com","commits":1,"url":"https://github.com/Ibrahim Gharbi"},{"name":"A187839","email":"ibrahim.gharbi@worldline.com","commits":15,"url":"https://github.com/A187839"}]},"filePathRelative":"virt/README.md","autoDesc":true}');export{b as comp,k as data};
